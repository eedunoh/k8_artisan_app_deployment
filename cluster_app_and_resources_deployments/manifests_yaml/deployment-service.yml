apiVersion: apps/v1
kind: Deployment
metadata:
  name: artisan-app
  annotations:
    karpenter.sh/provisioner-name: app-worker-node   # ensures Karpenter provisions a node if none exist
spec:
  replicas: 2
  selector:
    matchLabels:
      app: artisan-app
  template:
    metadata:
      labels:
        app: artisan-app                             # Pod label
    spec:                                            # only ONE spec block inside template
      nodeSelector:                                  # ensure pods land on nodes with defined node label
        role: app-worker-node
      containers:
        - name: artisan-app
          image: jackedu/artisan_app:latest
          ports:
            - containerPort: 80
            
---

# N/B: For a Service, the selector always matches Pod labels, not Node labels. Here’s why:
# Services route traffic to Pods, not to Nodes directly.
# Kubernetes looks at the Pod labels defined in the Deployment → template.metadata.labels.
# The nodeSelector only decides where the Pods get scheduled, but the Service doesn’t care about nodes — it only sees Pods.

apiVersion: v1
kind: Service
metadata:
  name: artisan-app-svc
spec:
  selector:
    app: artisan-app      # Matches pod label
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
  type: ClusterIP
